{"version":3,"sources":["mixins/chartjs.js","components/MyNavBar/MyNavItem.js","components/MyNavBar/index.js","components/Logo.js","components/MyHeader.js","components/Page.js","views/reports/DashboardView/Budget.js","views/reports/DashboardView/LatestOrders.js","views/reports/DashboardView/LatestProducts.js","views/reports/DashboardView/Sales.js","views/reports/DashboardView/TasksProgress.js","views/reports/DashboardView/TotalCustomers.js","views/reports/DashboardView/TotalProfit.js","views/reports/DashboardView/TrafficByDevice.js","views/reports/DashboardView/index.js","pages/myDashboard.js","views/account/AccountView/Profile.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/Notifications.js","views/account/AccountView/index.js","pages/myAccount.js","routes.js","App.js","index.js"],"names":["Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","MyNavItem","className","href","Icon","icon","title","ListItem","disableGutters","Button","component","RouterLink","to","size","getData","url","a","fetch","res","ok","json","items","UserIcon","class","BarChartIcon","UsersIcon","ShoppingBagIcon","SettingsIcon","LockIcon","UserPlusIcon","AlertCircleIcon","useStyles","makeStyles","mobileDrawer","desktopDrawer","avatar","cursor","MyNavBar","classes","useLocation","useState","error","setError","isLoaded","setIsLoaded","userItems","setItems","useEffect","userName","toLowerCase","then","response","getUser","result","message","console","log","content","Box","sx","display","flexDirection","alignItems","p","Avatar","src","avatar_url","Typography","name","color","variant","login","type","Divider","List","map","item","flexGrow","m","align","gutterBottom","justifyContent","pt","Hidden","lgUp","Drawer","anchor","paper","mdDown","open","Logo","props","alt","MyHeader","AppBar","Toolbar","IconButton","Page","forwardRef","ref","children","rest","Helmet","propTypes","PropTypes","node","isRequired","string","theme","root","colors","red","differenceIcon","differenceValue","marginRight","spacing","Budget","Card","clsx","CardContent","Grid","container","data","id","uuid","amount","customer","createdAt","status","actions","LatestOrders","orders","CardHeader","minWidth","Table","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","order","hover","moment","format","Chip","label","endIcon","imageUrl","updatedAt","subtract","image","LatestProducts","products","subtitle","length","product","divider","ListItemAvatar","ListItemText","primary","secondary","fromNow","edge","Sales","useTheme","datasets","indigo","grey","labels","animation","layout","padding","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","palette","text","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","background","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","action","position","orange","TasksProgress","LinearProgress","value","green","TotalCustomers","TotalProfit","TrafficByDevice","common","white","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","textAlign","style","default","minHeight","paddingBottom","paddingTop","Dashboard","Container","maxWidth","lg","sm","xl","xs","md","MyDashboard","user","Profile","dateText","CardActions","fullWidth","states","ProfileDetails","firstName","lastName","email","phone","state","country","values","setValues","handleChange","event","target","autoComplete","noValidate","subheader","TextField","helperText","onChange","required","select","SelectProps","native","option","Notifications","wrap","FormControlLabel","control","Checkbox","defaultChecked","Account","MyAccount","routes","path","element","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ea159a4.chunk.js","sourcesContent":["// Це бібліотека для графіків в Dashboard\n// Її ти не повинен знати\n\n/* eslint-disable no-underscore-dangle */\nimport { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","// Імпортуєм React\r\nimport React from 'react';\r\n// Імпортуєм NavLink як RouterLink для використання подальшого переходу по ссилкам\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\n// Імпортуєм PropTypes для використання перевірки типів (так як js не строго типізована)\r\nimport PropTypes from 'prop-types';\r\n// Імпортуєм елементи Button та ListItem із UI бібліотеки material-ui\r\nimport {\r\n  Button,\r\n  ListItem,\r\n} from '@material-ui/core';\r\n\r\nconst MyNavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n}) => {\r\n\r\n  return (\r\n    <ListItem\r\n      className={className}\r\n      disableGutters\r\n    >\r\n      <Button\r\n        className='Nav-item__btn'\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon\r\n            className='Nav-item__icon'\r\n            size=\"20\"\r\n          />\r\n        )}\r\n        <span className='Nav-item__title'>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\n// Перевіряжм типи данних наших елементів за допомогою бібліотеки PropTypes\r\nMyNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\n// Експортуєм NavItem за замовчуванням\r\nexport default MyNavItem;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n// ІМПОРТУЄМО ПЕВНІ ЮІ ЕЛЕМЕНТИ З БІБЛІОТЕКИ\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n// ІМПОРТУЄМО ПЕВНІ ІКОНКИ З БІБЛІОТЕКИ\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon,\r\n} from \"react-feather\";\r\n\r\n// ІМПОРТУЄМО NavItem\r\nimport MyNavItem from \"./MyNavItem\";\r\nimport { useState } from \"react\";\r\n\r\nconst getData = async (url) => {\r\n  const res = await fetch(url);\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst getUser = () => {\r\n  const userName = \"Humnytskiy\".toLowerCase();\r\n  const url = `https://api.github.com/users/${userName}`;\r\n  return getData(url).then((response) => {\r\n    return response;\r\n  });\r\n};\r\n\r\nconst user = {\r\n  avatar: \"/static/images/avatars/avatar_6.png\",\r\n  jobTitle: \"Senior Developer\",\r\n  name: \"Katarina Smith\",\r\n};\r\n\r\n// Створюємо масив об*єктів нав-елементів items\r\nconst items = [\r\n  {\r\n    // лінк\r\n    href: \"/\",\r\n    // іконка\r\n    icon: UserIcon,\r\n    // надпис\r\n    title: \"My layout\",\r\n    // його клас\r\n    class: \"Nav-item\",\r\n  },\r\n  {\r\n    href: \"/\",\r\n    icon: BarChartIcon,\r\n    title: \"Dashboard\",\r\n    class: \"Nav-item Nav-item--able\",\r\n  },\r\n  {\r\n    href: \"#\",\r\n    icon: UsersIcon,\r\n    title: \"Customers\",\r\n    class: \"Nav-item Nav-item--disable\",\r\n  },\r\n  {\r\n    href: \"#\",\r\n    icon: ShoppingBagIcon,\r\n    title: \"Products\",\r\n    class: \"Nav-item Nav-item--disable\",\r\n  },\r\n  {\r\n    href: \"/account\",\r\n    icon: UserIcon,\r\n    title: \"Account\",\r\n    class: \"Nav-item Nav-item--able\",\r\n  },\r\n  {\r\n    href: \"#\",\r\n    icon: SettingsIcon,\r\n    title: \"Settings\",\r\n    class: \"Nav-item Nav-item--disable\",\r\n  },\r\n  {\r\n    href: \"#\",\r\n    icon: LockIcon,\r\n    title: \"Login\",\r\n    class: \"Nav-item Nav-item--disable\",\r\n  },\r\n  {\r\n    href: \"#\",\r\n    icon: UserPlusIcon,\r\n    title: \"Register\",\r\n    class: \"Nav-item Nav-item--disable\",\r\n  },\r\n  {\r\n    href: \"#\",\r\n    icon: AlertCircleIcon,\r\n    title: \"Error\",\r\n    class: \"Nav-item Nav-item--disable Nav-item_error\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n}));\r\n\r\nconst MyNavBar = () => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [userItems, setItems] = useState({});\r\n\r\n  useEffect(() => {\r\n    getUser().then(\r\n      (result) => {\r\n        setItems(result);\r\n        setIsLoaded(true);\r\n      },\r\n      (error) => {\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    console.log(userItems);\r\n    const content = (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            p: 2,\r\n          }}\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            component={RouterLink}\r\n            src={userItems.avatar_url}\r\n            to=\"/account\"\r\n          />\r\n          <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n            {userItems.login}\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"body2\">\r\n            {userItems.type}\r\n          </Typography>\r\n        </Box>\r\n        <Divider />\r\n        <Box sx={{ p: 2 }}>\r\n          <List>\r\n            {items.map((item) => (\r\n              <MyNavItem\r\n                href={item.href}\r\n                key={item.title}\r\n                title={item.title}\r\n                icon={item.icon}\r\n                className={item.class}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <Box\r\n          sx={{\r\n            backgroundColor: \"background.default\",\r\n            m: 2,\r\n            p: 2,\r\n          }}\r\n        >\r\n          <Typography align=\"center\" gutterBottom variant=\"h4\">\r\n            Need more?\r\n          </Typography>\r\n          <Typography align=\"center\" variant=\"body2\">\r\n            Upgrade to PRO version and access 20 more screens\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              pt: 2,\r\n            }}\r\n          >\r\n            <Button\r\n              color=\"primary\"\r\n              component=\"a\"\r\n              href=\"https://react-material-kit.devias.io\"\r\n              variant=\"contained\"\r\n            >\r\n              See PRO version\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Hidden lgUp>\r\n          <Drawer\r\n            anchor=\"left\"\r\n            classes={{ paper: classes.mobileDrawer }}\r\n            variant=\"temporary\"\r\n          >\r\n            {content}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Drawer\r\n            anchor=\"left\"\r\n            classes={{ paper: classes.desktopDrawer }}\r\n            open\r\n            variant=\"persistent\"\r\n          >\r\n            {content}\r\n          </Drawer>\r\n        </Hidden>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nMyNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool,\r\n};\r\n\r\nexport default MyNavBar;\r\n","import React from 'react';\n\nconst Logo = (props) => (\n  <img\n    alt=\"Logo\"\n    src=\"/static/logo.svg\"\n    {...props}\n  />\n);\n\nexport default Logo;\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  IconButton,\r\n  Toolbar,\r\n} from '@material-ui/core';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from 'src/components/Logo';\r\n\r\n\r\nconst MyHeader = () => {\r\n  return (\r\n    <AppBar\r\n      className='AppBar'\r\n    >\r\n      <Toolbar className='Toolbar'>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <IconButton className='Toolbar__btn'>\r\n          <NotificationsIcon  className='Toolbar__icon Toolbar__icon_notifications' />\r\n        </IconButton>\r\n        <IconButton className='Toolbar__btn'>\r\n            <InputIcon className='Toolbar__icon Toolbar__icon_input' />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nMyHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default MyHeader;\r\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => (\n  <div\n    ref={ref}\n    {...rest}\n  >\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </div>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Budget = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              BUDGET\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              $24,000\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <MoneyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          sx={{\n            pt: 2,\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <ArrowDownwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            12%\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nBudget.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Budget;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    createdAt: 1555016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    customer: {\n      name: 'Cao Yu'\n    },\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    customer: {\n      name: 'Anje Keizer'\n    },\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    customer: {\n      name: 'Adam Denisov'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestOrders = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [orders] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Latest Orders\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 800 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Order Ref\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Date\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((order) => (\n                <TableRow\n                  hover\n                  key={order.id}\n                >\n                  <TableCell>\n                    {order.ref}\n                  </TableCell>\n                  <TableCell>\n                    {order.customer.name}\n                  </TableCell>\n                  <TableCell>\n                    {moment(order.createdAt).format('DD/MM/YYYY')}\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      color=\"primary\"\n                      label={order.status}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/static/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/static/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/static/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/static/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/static/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n\nconst useStyles = makeStyles(({\n  root: {\n    height: '100%'\n  },\n  image: {\n    height: 48,\n    width: 48\n  }\n}));\n\nconst LatestProducts = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [products] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        subtitle={`${products.length} in total`}\n        title=\"Latest Products\"\n      />\n      <Divider />\n      <List>\n        {products.map((product, i) => (\n          <ListItem\n            divider={i < products.length - 1}\n            key={product.id}\n          >\n            <ListItemAvatar>\n              <img\n                alt=\"Product\"\n                className={classes.image}\n                src={product.imageUrl}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={product.name}\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\n            />\n            <IconButton\n              edge=\"end\"\n              size=\"small\"\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProducts;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.paper,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={(\n          <Button\n            endIcon={<ArrowDropDownIcon />}\n            size=\"small\"\n            variant=\"text\"\n          >\n            Last 7 days\n          </Button>\n        )}\n        title=\"Latest Sales\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          sx={{\n            height: 400,\n            position: 'relative'\n          }}\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  LinearProgress,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.orange[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TasksProgress = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TASKS PROGRESS\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              75.5%\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <InsertChartIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box sx={{ pt: 3 }}>\n          <LinearProgress\n            value={75.5}\n            variant=\"determinate\"\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTasksProgress.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TasksProgress;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.green[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.green[900]\n  },\n  differenceValue: {\n    color: colors.green[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalCustomers = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL CUSTOMERS\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              1,600\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            pt: 2\n          }}\n        >\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            16%\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalCustomers.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalCustomers;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.indigo[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalProfit = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n          sx={{ justifyContent: 'space-between' }}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL PROFIT\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              $23,200\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AttachMoneyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TabletIcon from '@material-ui/icons/Tablet';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TrafficByDevice = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          colors.indigo[500],\n          colors.red[600],\n          colors.orange[600]\n        ],\n        borderWidth: 8,\n        borderColor: colors.common.white,\n        hoverBorderColor: colors.common.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.paper,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: 63,\n      icon: LaptopMacIcon,\n      color: colors.indigo[500]\n    },\n    {\n      title: 'Tablet',\n      value: 15,\n      icon: TabletIcon,\n      color: colors.red[600]\n    },\n    {\n      title: 'Mobile',\n      value: 23,\n      icon: PhoneIcon,\n      color: colors.orange[600]\n    }\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Traffic by Device\" />\n      <Divider />\n      <CardContent>\n        <Box\n          sx={{\n            height: 300,\n            position: 'relative'\n          }}\n        >\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 2\n          }}\n        >\n          {devices.map(({\n            color,\n            icon: Icon,\n            title,\n            value\n          }) => (\n            <Box\n              key={title}\n              sx={{\n                p: 1,\n                textAlign: 'center'\n              }}\n            >\n              <Icon color=\"action\" />\n              <Typography\n                color=\"textPrimary\"\n                variant=\"body1\"\n              >\n                {title}\n              </Typography>\n              <Typography\n                style={{ color }}\n                variant=\"h2\"\n              >\n                {value}\n                %\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TrafficByDevice;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Budget from './Budget';\nimport LatestOrders from './LatestOrders';\nimport LatestProducts from './LatestProducts';\nimport Sales from './Sales';\nimport TasksProgress from './TasksProgress';\nimport TotalCustomers from './TotalCustomers';\nimport TotalProfit from './TotalProfit';\nimport TrafficByDevice from './TrafficByDevice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <Budget className='info-table' />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalCustomers className='info-table' />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TasksProgress className='info-table' />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalProfit className='info-table' />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <Sales />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <TrafficByDevice />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <LatestProducts />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from 'react';\r\nimport MyNavBar from '../components/MyNavBar';\r\nimport MyHeader from '../components/MyHeader';\r\nimport Dashboard from '../views/reports/DashboardView';\r\n\r\nconst MyDashboard = () => {\r\n    \r\n  return (\r\n    <div className='page'>\r\n      <MyHeader className='Header' />\r\n      <MyNavBar/>\r\n    <div className='wrapper'>\r\n        <div className='content-container'>\r\n          <div className='content'>\r\n            <Dashboard />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDashboard;\r\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst user = {\n  avatar: \"/static/images/avatars/avatar_6.png\",\n  city: \"Kyiv\",\n  country: \"UA\",\n  jobTitle: \"Senior Developer\",\n  name: \"Katarina Smith\",\n  timezone: \"GTM-7\",\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100,\n  },\n}));\n\nconst getData = async (url) => {\n  const res = await fetch(url);\n  if (res.ok) {\n    return res.json();\n  }\n  return 0;\n};\n\nconst getUser = () => {\n  const userName = \"Humnytskiy\".toLowerCase();\n  const url = `https://api.github.com/users/${userName}`;\n  return getData(url).then((response) => {\n    console.log(response);\n    return response;\n  });\n};\n\nconst Profile = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [userItems, setItems] = useState({});\n\n  useEffect(() => {\n    getUser().then(\n      (result) => {\n        setItems(result);\n        setIsLoaded(true);\n      },\n      (error) => {\n        setIsLoaded(true);\n        setError(error);\n      }\n    );\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <Card className={clsx(classes.root, className)} {...rest}>\n        <CardContent>\n          <Box\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Avatar className={classes.avatar} src={userItems.avatar_url} />\n            <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n              {userItems.login}\n            </Typography>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {`${user.city} ${user.country}`}\n            </Typography>\n            <Typography\n              className={classes.dateText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {`${moment().format(\"hh:mm A\")} ${user.timezone}`}\n            </Typography>\n          </Box>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button color=\"primary\" fullWidth variant=\"text\">\n            Upload picture\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n};\n\nProfile.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst states = [\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  },\n  {\n    value: 'new-york',\n    label: 'New York'\n  },\n  {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    firstName: 'my Name',\n    lastName: 'my Lastname',\n    email: 'myemail',\n    phone: '',\n    state: '...',\n    country: 'Ukraine'\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Profile from './Profile';\nimport ProfileDetails from './ProfileDetails';\nimport Notifications from './Notifications';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Account = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Account\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            <Profile />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails />\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            md={12}\n            xs={12}\n          >\n            <Notifications />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Account;\n","import React, { useState } from 'react';\r\nimport MyNavBar from '../components/MyNavBar';\r\nimport MyHeader from '../components/MyHeader';\r\nimport Account from '../views/account/AccountView';\r\n\r\nconst MyAccount = () => {\r\n  return (\r\n    <div className='page'>\r\n      <MyHeader className='Header'/>\r\n      <MyNavBar/>\r\n      <div className='wrapper'>\r\n        <div className='content-container'>\r\n          <div className='content'>\r\n            <Account />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyAccount;","import React from 'react';\n// ІМПОРТУЄМО НАШІ ДВІ СТОРІНКИ ДЛЯ ВИКОРИСТАННЯ\nimport MyDashboard from 'src/pages/myDashboard';\nimport MyAccount from 'src/pages/myAccount';\n\n// Шляхи(routes) нашого маршрутизатора\nconst routes = [\n  {\n    path: '/',\n    element: <MyDashboard />\n  },\n  {\n    path: '/account',\n    element: <MyAccount />\n  }\n  \n];\n\nexport default routes;\n","import React from 'react';\n// Імпортуєм пакет використання шляхів\nimport { useRoutes } from 'react-router-dom';\n// Потрібний для використання налаштувань певної теми\nimport { ThemeProvider } from '@material-ui/core';\n// Потрібний для відображення графіків\nimport 'src/mixins/chartjs';\n// Імпорттуємо наші шляхи\nimport routes from 'src/routes';\n// Імпорттуємо наші стилі\nimport './styles/style.css';\n\nconst App = () => {\n  // запускаєм роутер\n  const routing = useRoutes(routes);\n\n  return (\n    <ThemeProvider >\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// IMPORT БІБЛІОТЕК\n\n// Імпортуємо React фреймворк\nimport React from \"react\";\n// Імпортуємо пакет react-dom для рендеру(13 ст.)\nimport ReactDOM from \"react-dom\";\n// Імпортуємо бібліотеку react-router-dom для нашої маршрутизації(14 ст.)\nimport { HashRouter } from \"react-router-dom\";\n\n// IMPORT ФАЙЛІВ З СЕРЕДОВИЩА\nimport App from \"./App\";\n\n// Рендерим наш аплікейшин , і вставляємо в елемент з ID root\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}